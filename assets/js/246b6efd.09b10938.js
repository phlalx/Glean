"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[187],{3905:function(e,n,r){r.r(n),r.d(n,{MDXContext:function(){return c},MDXProvider:function(){return u},mdx:function(){return h},useMDXComponents:function(){return d},withMDXComponents:function(){return s}});var t=r(67294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(){return o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},o.apply(this,arguments)}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=t.createContext({}),s=function(e){return function(n){var r=d(n.components);return t.createElement(e,o({},n,{components:r}))}},d=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},u=function(e){var n=d(e.components);return t.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=d(r),u=i,f=s["".concat(a,".").concat(u)]||s[u]||m[u]||o;return r?t.createElement(f,l(l({ref:n},c),{},{components:r})):t.createElement(f,l({ref:n},c))}));function h(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=f;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=r[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},12038:function(e,n,r){r.d(n,{EO:function(){return l},O1:function(){return a},Rr:function(){return p}});var t,i=r(67294),o=r(44256);function a(e){return i.createElement("a",{href:t+e.file},e.file)}function l(e){return i.createElement("a",{href:t+e.file},e.children)}t=(0,o.isInternal)()?"https://www.internalfb.com/code/fbsource/fbcode/":"https://github.com/facebookincubator/Glean/tree/master/";var p=function(e){e.children;var n=e.internal,r=e.external;return(0,o.fbContent)({internal:i.createElement("code",null,n),external:i.createElement("code",null,r)})}},77378:function(e,n,r){r.r(n),r.d(n,{contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return d}});var t=r(87462),i=r(63366),o=(r(67294),r(3905)),a=(r(44256),r(12038)),l=["components"],p={id:"lsif-typescript",title:"TypeScript",sidebar_label:"TypeScript"},c=void 0,s={unversionedId:"indexer/lsif-typescript",id:"indexer/lsif-typescript",isDocsHomePage:!1,title:"TypeScript",description:"To index TypeScript we use SourceGraph's LSIF indexer for TypeScript. LSIF is a new format for tools to share information about code. Releases of lsif-tsc can be installed with yarn or npm and used as indexers for LSIF, which Glean will accept. The indexer itself requires a node.js runtime.",source:"@site/docs/indexer/lsif-typescript.md",sourceDirName:"indexer",slug:"/indexer/lsif-typescript",permalink:"/docs/indexer/lsif-typescript",editUrl:"https://github.com/facebookincubator/Glean/tree/main/glean/website/docs/indexer/lsif-typescript.md",tags:[],version:"current",frontMatter:{id:"lsif-typescript",title:"TypeScript",sidebar_label:"TypeScript"},sidebar:"someSidebar",previous:{title:"Haskell",permalink:"/docs/indexer/haskell"},next:{title:"Go",permalink:"/docs/indexer/lsif-go"}},d=[{value:"Run the indexer",id:"run-the-indexer",children:[],level:2},{value:"In the shell",id:"in-the-shell",children:[],level:2},{value:"Schema",id:"schema",children:[],level:2}],u={toc:d};function m(e){var n=e.components,r=(0,i.Z)(e,l);return(0,o.mdx)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("p",null,"To index ",(0,o.mdx)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," we use SourceGraph's ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/sourcegraph/lsif-node"},"LSIF indexer for TypeScript"),". ",(0,o.mdx)("a",{parentName:"p",href:"https://lsif.dev"},"LSIF")," is a new format for tools to share information about code. Releases of ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/sourcegraph/lsif-node/releases/tag/v0.7.4"},"lsif-tsc")," can be installed with ",(0,o.mdx)("inlineCode",{parentName:"p"},"yarn")," or ",(0,o.mdx)("inlineCode",{parentName:"p"},"npm")," and used as indexers for LSIF, which Glean will accept. The indexer itself requires a ",(0,o.mdx)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"node.js")," runtime."),(0,o.mdx)("h2",{id:"run-the-indexer"},"Run the indexer"),(0,o.mdx)("p",null,"The indexer is run via the main ",(0,o.mdx)("inlineCode",{parentName:"p"},"glean")," CLI tool."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"> cabal build exe:glean\n")),(0,o.mdx)("p",null,"And index your TypeScript repository with:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"glean index typescript DIR --repo name/hash\n")),(0,o.mdx)("p",null,"where"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"DIR")," is the root directory containing the TypeScript project"),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"name/hash")," is the name of the repository to create")),(0,o.mdx)("p",null,"Provide the usual ",(0,o.mdx)("inlineCode",{parentName:"p"},"--db-root")," and ",(0,o.mdx)("inlineCode",{parentName:"p"},"--schema")," or ",(0,o.mdx)("inlineCode",{parentName:"p"},"--service")," arguments\nto ",(0,o.mdx)("inlineCode",{parentName:"p"},"glean")),(0,o.mdx)("p",null,"To index very large TypeScript repositories, it may be necessary to use more heap memory in node.js (or break up the targets into subdirectories). Setting ",(0,o.mdx)("inlineCode",{parentName:"p"},'export NODE_OPTIONS="--max-old-space-size=8192"')," in the environment in which the indexer runs may help."),(0,o.mdx)("h2",{id:"in-the-shell"},"In the shell"),(0,o.mdx)("p",null,"TypeScript source can also be indexed directly from the Glean shell:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},":index typescript DIR\n")),(0,o.mdx)("p",null,"The shell will pick a DB name and hash for you based on ",(0,o.mdx)("inlineCode",{parentName:"p"},"DIR"),"."),(0,o.mdx)("h2",{id:"schema"},"Schema"),(0,o.mdx)("p",null,"The schema is in ",(0,o.mdx)(a.O1,{file:"glean/schema/source/lsif.angle",mdxType:"SrcFile"})))}m.isMDXComponent=!0}}]);