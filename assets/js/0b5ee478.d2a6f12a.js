"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[695],{3905:function(e,n,t){t.r(n),t.d(n,{MDXContext:function(){return u},MDXProvider:function(){return p},mdx:function(){return h},useMDXComponents:function(){return c},withMDXComponents:function(){return s}});var i=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},r.apply(this,arguments)}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,i,l=function(e,n){if(null==e)return{};var t,i,l={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=i.createContext({}),s=function(e){return function(n){var t=c(n.components);return i.createElement(e,r({},n,{components:t}))}},c=function(e){var n=i.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return i.createElement(u.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},b=i.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,a=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),s=c(t),p=l,b=s["".concat(a,".").concat(p)]||s[p]||m[p]||r;return t?i.createElement(b,o(o({ref:n},u),{},{components:t})):i.createElement(b,o({ref:n},u))}));function h(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,a=new Array(r);a[0]=b;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o.mdxType="string"==typeof e?e:l,a[1]=o;for(var u=2;u<r;u++)a[u]=t[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}b.displayName="MDXCreateElement"},60487:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return d},default:function(){return p},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return s}});var i=t(87462),l=t(63366),r=(t(67294),t(3905)),a=(t(44256),["components"]),o={id:"building",title:"Building Glean from Source",sidebar_label:"Building Glean"},d=void 0,u={unversionedId:"building",id:"building",isDocsHomePage:!1,title:"Building Glean from Source",description:"Introduction",source:"@site/docs/building.md",sourceDirName:".",slug:"/building",permalink:"/docs/building",editUrl:"https://github.com/facebookincubator/Glean/tree/main/glean/website/docs/building.md",tags:[],version:"current",frontMatter:{id:"building",title:"Building Glean from Source",sidebar_label:"Building Glean"},sidebar:"someSidebar",previous:{title:"Trying Glean",permalink:"/docs/trying"},next:{title:"Walkthrough",permalink:"/docs/walkthrough"}},s=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"You will need",id:"you-will-need",children:[{value:"Ubuntu",id:"ubuntu",children:[],level:3},{value:"Debian",id:"debian",children:[],level:3},{value:"Fedora",id:"fedora",children:[],level:3}],level:2},{value:"Building",id:"building",children:[{value:"Build hsthrift and dependencies",id:"build-hsthrift-and-dependencies",children:[],level:3},{value:"Build Glean",id:"build-glean",children:[],level:3},{value:"Tips for faster builds",id:"tips-for-faster-builds",children:[],level:3}],level:2}],c={toc:s};function p(e){var n=e.components,t=(0,l.Z)(e,a);return(0,r.mdx)("wrapper",(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h2",{id:"introduction"},"Introduction"),(0,r.mdx)("p",null,"Glean is written mainly in ",(0,r.mdx)("a",{parentName:"p",href:"http://www.haskell.org/"},"Haskell"),", and\nmakes heavy use of\n",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/facebookincubator/hsthrift"},"Thrift")," for data\ncommunication and serialization, so these are the main dependencies\nthat are needed for building Glean."),(0,r.mdx)("h2",{id:"you-will-need"},"You will need"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("p",{parentName:"li"},"Linux. The build is only tested on Linux so far; we hope to add\nsupport for other OSs in the future. We build on x86","_","64 and arm64v8.")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("p",{parentName:"li"},(0,r.mdx)("a",{parentName:"p",href:"https://www.haskell.org/ghc/"},"GHC"),". To see which versions Glean is tested with, check the current ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/facebookincubator/Glean/blob/master/.github/workflows/ci.yml"},"ci.yml")," script.")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("p",{parentName:"li"},"Cabal/cabal-install version 3.6 or later (older versions won't work)."))),(0,r.mdx)("p",null,"Additional per-distribution setup follows."),(0,r.mdx)("h3",{id:"ubuntu"},"Ubuntu"),(0,r.mdx)("p",null,"Install prerequisite packages. (many of these are dependencies of\nhsthrift; an up to date list can be found in the\n",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/facebookincubator/hsthrift/blob/master/.github/workflows/Dockerfile"},"Dockerfile"),"\nthat we use for building the base image for CI)."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"sudo apt-get install \\\n    g++ \\\n    cmake \\\n    ninja-build \\\n    bison flex \\\n    git \\\n    libzstd-dev \\\n    libboost-all-dev \\\n    libevent-dev \\\n    libdouble-conversion-dev \\\n    libgoogle-glog-dev \\\n    libgflags-dev \\\n    libiberty-dev \\\n    liblz4-dev \\\n    liblzma-dev \\\n    libsnappy-dev \\\n    make \\\n    zlib1g-dev \\\n    binutils-dev \\\n    libjemalloc-dev \\\n    libssl-dev \\\n    pkg-config \\\n    libunwind-dev \\\n    libsodium-dev \\\n    curl \\\n    libpcre3-dev \\\n    libmysqlclient-dev \\\n    libfftw3-dev \\\n    libxxhash-dev\n")),(0,r.mdx)("h3",{id:"debian"},"Debian"),(0,r.mdx)("p",null,"The package dependencies for Debian current are the same as above for Ubuntu,\nexcept you need ",(0,r.mdx)("inlineCode",{parentName:"p"},"default-libmysqlclient-dev")," instead of ",(0,r.mdx)("inlineCode",{parentName:"p"},"libmysqlclient-dev"),"."),(0,r.mdx)("h3",{id:"fedora"},"Fedora"),(0,r.mdx)("p",null,"Install prerequisite packages:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"sudo dnf install \\\n    g++ \\\n    make \\\n    cmake \\\n    ninja-build \\\n    binutils \\\n    bison flex \\\n    curl \\\n    libzstd-devel \\\n    boost-devel \\\n    libevent-devel \\\n    double-conversion-devel \\\n    glog-devel \\\n    gflags-devel \\\n    zlib-devel \\\n    openssl-devel \\\n    libunwind-devel \\\n    libsodium-devel \\\n    pcre-devel \\\n    community-mysql-devel \\\n    fftw-devel \\\n    xxhash-devel \\\n    snappy-devel \\\n    lz4-devel\n")),(0,r.mdx)("h2",{id:"building"},"Building"),(0,r.mdx)("p",null,"Clone the repository:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"git clone https://github.com/facebookincubator/Glean.git\ncd Glean\n")),(0,r.mdx)("h3",{id:"build-hsthrift-and-dependencies"},"Build hsthrift and dependencies"),(0,r.mdx)("p",null,"Glean depends on hsthrift, fbthrift, folly, rocksdb and some other core libraries.\nWe need to set paths to these that the Glean build can find the thrift compiler\nand associated libraries:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"export LD_LIBRARY_PATH=$HOME/.hsthrift/lib:$HOME/.hsthrift/lib64:$LD_LIBRARY_PATH\nexport PKG_CONFIG_PATH=$HOME/.hsthrift/lib/pkgconfig:$HOME/.hsthrift/lib64/pkgconfig\nexport PATH=$PATH:$HOME/.hsthrift/bin\n")),(0,r.mdx)("p",null,"These will build with either gcc or clang as the base C and C++ compilers. We\ntest with gcc-{9,10} and clang-{10,11,12}."),(0,r.mdx)("p",null,"Now clone ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/facebookincubator/hsthrift"},"hsthrift")," and\nbuild and install its dependencies:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"./install_deps.sh\n")),(0,r.mdx)("h3",{id:"build-glean"},"Build Glean"),(0,r.mdx)("p",null,"Now you can build all the Glean parts:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"make\n")),(0,r.mdx)("p",null,"If everything worked, the tests should pass:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"make test\n")),(0,r.mdx)("p",null,"At this point you can ",(0,r.mdx)("inlineCode",{parentName:"p"},"cabal install")," to install the executables into\n",(0,r.mdx)("inlineCode",{parentName:"p"},"~/.cabal/bin"),"."),(0,r.mdx)("h3",{id:"tips-for-faster-builds"},"Tips for faster builds"),(0,r.mdx)("p",null,"If you have 4 or more cores and at least 16G of ram, you can significantly speed up the build times by passing some flags to the build stages.\nOn an 6 core machine with 16G of ram you might use, to save 50% or more of the build time."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"./install_deps.sh --threads 6\nmake EXTRA_GHC_OPTS='-j4 +RTS -A128m -n2m -RTS'\n")),(0,r.mdx)("p",null,"Using clang++-12 and clang-12 as the C and C++ compilers can shave another 25% off the build time, though is less well tested."))}p.isMDXComponent=!0}}]);